--Homework 1: Pre-Requisites (Docker, Terraform, SQL) for Data Engineering Zoomcamp 2024


--1)

docker run --help

--2)

docker run -it python:3.9 bash
pip list

--3) 

SELECT COUNT(*)
FROM public.green_trip_data
WHERE DATE(lpep_pickup_datetime) = '2019-09-18'

--4)

SELECT
    lpep_pickup_datetime AS pickup_day,
    SUM(trip_distance) AS total_trip_distance
FROM
    public.green_trip_data
GROUP BY
    pickup_day
ORDER BY
    total_trip_distance DESC
LIMIT 1;

--5)

SELECT
    t."Borough",
    SUM(g.total_amount) AS total_amount_sum
FROM
    public."green_trip_data" g
JOIN
    public."taxi+zone" t ON t."LocationID" = g."PULocationID"
WHERE
    g.lpep_pickup_datetime BETWEEN '2019-09-18 00:00:00' AND '2019-09-18 23:59:59'
    AND t."Borough" != 'Unknown'
GROUP BY
    t."Borough"
HAVING
    SUM(g.total_amount) > 50000
ORDER BY
    total_amount_sum DESC
LIMIT 3;

--6)

SELECT
    tz_dropoff."Zone" AS dropoff_zone,
    SUM(gt.tip_amount) AS total_tip_amount
FROM
    public."green_trip_data" gt
JOIN
    public."taxi+zone" tz_pickup ON tz_pickup."LocationID" = gt."PULocationID"
JOIN
    public."taxi+zone" tz_dropoff ON tz_dropoff."LocationID" = gt."DOLocationID"
WHERE
    tz_pickup."Zone" = 'Astoria'
    AND EXTRACT(YEAR FROM gt.lpep_pickup_datetime) = 2019
    AND EXTRACT(MONTH FROM gt.lpep_pickup_datetime) = 9
GROUP BY
    tz_dropoff."Zone"
ORDER BY
    total_tip_amount DESC
LIMIT 5;

--7)

terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.demo_dataset will be created
  + resource "google_bigquery_dataset" "demo_dataset" {
      + creation_time              = (known after apply)
      + dataset_id                 = "demo_dataset"
      + default_collation          = (known after apply)
      + delete_contents_on_destroy = false
      + effective_labels           = (known after apply)
      + etag                       = (known after apply)
      + id                         = (known after apply)
      + is_case_insensitive        = (known after apply)
      + last_modified_time         = (known after apply)
      + location                   = "US"
      + max_time_travel_hours      = (known after apply)
      + project                    = "brilliant-rhino-412514"
      + self_link                  = (known after apply)
      + storage_billing_model      = (known after apply)
      + terraform_labels           = (known after apply)
    }

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + effective_labels            = (known after apply)
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "brilliant-rhino-412514-terra-bucket"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + rpo                         = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = (known after apply)
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_bigquery_dataset.demo_dataset: Creating...
google_storage_bucket.demo-bucket: Creating...
google_storage_bucket.demo-bucket: Creation complete after 1s [id=brilliant-rhino-412514-terra-bucket]
google_bigquery_dataset.dataset: Creation complete after 3s [id=projects/composed-sun-375018/datasets/demo_dataset]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
